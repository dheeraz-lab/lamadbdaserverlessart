AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys a Lambda function to fetch New York temperature

Parameters:
  LambdaFunctionName:
    Type: String
    Default: WeatherFetcher
    Description: Name of the Lambda function

  S3Bucket:
    Type: String
    Description: S3 bucket where lambda.zip is stored

  S3Key:
    Type: String
    Description: S3 key (path to lambda.zip)

Resources:

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${LambdaFunctionName}-ExecutionRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: WeatherLambdaLoggingPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  WeatherLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3Key
      Runtime: python3.9
      Timeout: 10
      Environment:
        Variables:
          WEATHER_API_KEY: "your-api-key-here"  # Set this securely in Lambda or use Secrets Manager

Outputs:
  LambdaFunctionName:
    Value: !Ref WeatherLambdaFunction
    Description: Deployed Lambda function name
